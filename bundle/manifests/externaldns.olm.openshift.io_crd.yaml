apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  name: externaldnses.externaldns.olm.openshift.io
spec:
  group: externaldns.olm.openshift.io
  names:
    kind: ExternalDNS
    listKind: ExternalDNSList
    plural: externaldnses
    singular: externaldns
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExternalDNS describes a managed ExternalDNS controller instance
          for a cluster. The controller is responsible for creating external DNS records
          in supported DNS providers based off of instances of select Kubernetes resources.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec is the specification of the desired behavior of the
              ExternalDNS.
            properties:
              domains:
                description: "Domains specifies which domains that ExternalDNS should
                  create DNS records for. Multiple domain values can be specified
                  such that subdomains of an included domain can effectively be ignored
                  using the \"Include\" and \"Exclude\" domain filter options. \n
                  An empty list of domains means ExternalDNS will create DNS records
                  for any included source resource regardless of the resource's desired
                  hostname. \n Populating Domains with only excluded options means
                  ExternalDNS will create DNS records for any included source resource
                  that do not match the provided excluded domain options. \n Excluding
                  DNS records that were previous included via a resource update will
                  *not* result in the original DNS records being deleted."
                items:
                  description: ExternalDNSDomain describes how sets of included or
                    excluded domains are to be constructed.
                  properties:
                    filterType:
                      description: "FilterType marks the Name or Pattern field as
                        an included or excluded set of domains. \n In the event of
                        contradicting domain options, preference is given to excluded
                        domains. \n This field accepts the following values: \n  \"Include\":
                        Include the domain set specified  by name or pattern. \n  \"Exclude\":
                        Exclude the domain set specified  by name or pattern."
                      enum:
                      - Include
                      - Exclude
                      type: string
                    matchType:
                      description: "MatchType specifies the type of match to be performed
                        by ExternalDNS when determining whether or not to publish
                        DNS records for a given source resource based on the resource's
                        requested hostname. \n This field accepts the following values:
                        \n  \"Exact\": Explicitly match the full domain string   specified
                        via the Name field, including any subdomains   of Name. \n
                        \ \"Pattern\": Match potential domains against  the provided
                        regular expression pattern string."
                      enum:
                      - Exact
                      - Pattern
                      type: string
                    name:
                      description: "Name is a string representing a single domain
                        value. Subdomains are included. \n e.g. my-app.my-cluster-domain.com
                        would also include foo.my-app.my-cluster-domain.com"
                      type: string
                    pattern:
                      description: Pattern is a regular expression used to match a
                        set of domains. Any provided regular expressions should follow
                        the syntax used by the go regexp package (RE2). See https://golang.org/pkg/regexp/
                        for more information.
                      type: string
                  required:
                  - filterType
                  - matchType
                  type: object
                type: array
              provider:
                description: Provider refers to the DNS provider that ExternalDNS
                  should publish records to. Note that each ExternalDNS is tied to
                  a single provider.
                properties:
                  aws:
                    description: AWS describes provider configuration options specific
                      to AWS (Route 53).
                    properties:
                      credentials:
                        description: "Credentials is a reference to a secret containing
                          the following keys (with corresponding values): \n * aws_access_key_id
                          * aws_secret_access_key \n See https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md
                          for more information."
                        properties:
                          name:
                            description: Name is the name of the secret.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - credentials
                    type: object
                  azure:
                    description: Azure describes provider configuration options specific
                      to Azure DNS.
                    properties:
                      configFile:
                        description: "ConfigFile is a reference to a secret containing
                          the necessary information to use the Azure provider. The
                          secret referenced by ConfigFile should contain a key named
                          `azure.json` similar to the following: \n {   \"tenantId\":
                          \"123\",   \"subscriptionId\": \"456\",   \"resourceGroup\":
                          \"MyDnsResourceGroup\",   \"aadClientId\": \"789\",   \"aadClientSecret\":
                          \"123\" } \n See https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/azure.md
                          for more information on the necessary configuration key/values
                          and how to obtain them."
                        properties:
                          name:
                            description: Name is the name of the secret.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - configFile
                    type: object
                  blueCat:
                    description: BlueCat describes provider configuration options
                      specific to BlueCat DNS.
                    properties:
                      configFile:
                        description: "ConfigFile is a reference to a secret containing
                          the necessary information to use the BlueCat provider. The
                          secret referenced by ConfigFile should contain an object
                          named `bluecat.json` similar to the following: \n {   \"gatewayHost\":
                          \"https://bluecatgw.example.com\",   \"gatewayUsername\":
                          \"user\",   \"gatewayPassword\": \"pass\",   \"dnsConfiguration\":
                          \"Example\",   \"dnsView\": \"Internal\",   \"rootZone\":
                          \"example.com\",   \"skipTLSVerify\": false } \n See https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/bluecat.md
                          for more information on the necessary configuration values
                          and how to obtain them."
                        properties:
                          name:
                            description: Name is the name of the secret.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - configFile
                    type: object
                  gcp:
                    description: GCP describes provider configuration options specific
                      to GCP (Google DNS).
                    properties:
                      credentials:
                        description: Credentials is a reference to a secret containing
                          the necessary GCP service account keys. The secret referenced
                          by Credentials should contain a key named `gcp-credentials.json`
                          presumably generated by the gcloud CLI.
                        properties:
                          name:
                            description: Name is the name of the secret.
                            type: string
                        required:
                        - name
                        type: object
                      project:
                        description: Project is the GCP project to use for creating
                          DNS records. This field is not necessary when running on
                          GCP as externalDNS auto-detects the GCP project to use when
                          running on GCP.
                        type: string
                    required:
                    - credentials
                    type: object
                  infoblox:
                    description: Infoblox describes provider configuration options
                      specific to Infoblox DNS.
                    properties:
                      credentials:
                        description: "Credentials is a reference to a secret containing
                          the following keys (with proper corresponding values): \n
                          * EXTERNAL_DNS_INFOBLOX_WAPI_USERNAME * EXTERNAL_DNS_INFOBLOX_WAPI_PASSWORD
                          \n See https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/infoblox.md
                          for more information and configuration options."
                        properties:
                          name:
                            description: Name is the name of the secret.
                            type: string
                        required:
                        - name
                        type: object
                      gridHost:
                        default: 127.0.0.1
                        description: "GridHost is the IP of the Infoblox Grid host.
                          \n kubebuilder:validation:Required"
                        type: string
                      wapiPort:
                        default: 443
                        description: "WAPIPort is the port for the Infoblox WAPI.
                          \n kubebuilder:validation:Required"
                        type: integer
                      wapiVersion:
                        default: 2.3.1
                        description: "WAPIVersion is the version of the Infoblox WAPI.
                          \n kubebuilder:validation:Required"
                        type: string
                    required:
                    - credentials
                    - gridHost
                    - wapiPort
                    - wapiVersion
                    type: object
                  type:
                    description: "Type describes which DNS provider ExternalDNS should
                      publish records to. The following DNS providers are supported:
                      \n  * AWS (Route 53)  * GCP (Google DNS)  * Azure  * BlueCat
                      \ * Infoblox"
                    enum:
                    - AWS
                    - GCP
                    - Azure
                    - BlueCat
                    - Infoblox
                    type: string
                required:
                - type
                type: object
              source:
                description: "Source describes which source resource ExternalDNS will
                  be configured to create DNS records for. \n Multiple ExternalDNS
                  CRs must be created if multiple ExternalDNS source resources are
                  desired."
                properties:
                  annotationFilter:
                    additionalProperties:
                      type: string
                    description: AnnotationFilter describes an annotation filter used
                      to filter which source instance resources ExternalDNS publishes
                      records for. The annotation filter uses label selector semantics
                      against source resource annotations.
                    type: object
                  crd:
                    description: CRD describes source configuration options specific
                      to the CRD source resource. See https://github.com/kubernetes-sigs/external-dns/blob/master/docs/contributing/crd-source.md
                      for more information about the requirements for ExternalDNS
                      Source CRD requirements.
                    properties:
                      kind:
                        description: "Kind is the kind of the CRD source resource
                          type to be consumed by ExternalDNS. \n e.g. \"DNSEndpoint\""
                        minLength: 1
                        type: string
                      labelFilter:
                        description: LabelFilter specifies a label filter to be used
                          to filter CRD resource instances. Only one label filter
                          can be specified on an ExternalDNS instance.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      version:
                        description: "Version is the API version of the given resource
                          kind for ExternalDNS to use. \n e.g. \"externaldns.k8s.io/v1alpha1\""
                        minLength: 1
                        type: string
                    required:
                    - kind
                    - version
                    type: object
                  fqdnTemplate:
                    description: "FQDNTemplate sets a templated string that's used
                      to generate DNS names from sources that don't define a hostname
                      themselves. Multiple global FQDN templates are possible. \n
                      Should not be empty when HostnameAnnotationPolicy is set to
                      Ignore. \n Provided templates should follow the syntax defined
                      for text/template Go package, see https://pkg.go.dev/text/template.
                      Annotations inside the template correspond to the definition
                      of the source resource object (e.g. Kubernetes service, OpenShift
                      route). Example: \"{{.Name}}.example.com\" would be expanded
                      to \"myservice.example.com\" for service source"
                    items:
                      type: string
                    type: array
                  hostnameAnnotation:
                    default: Ignore
                    description: "HostnameAnnotationPolicy specifies whether or not
                      ExternalDNS should ignore the \"external-dns.alpha.kubernetes.io/hostname\"
                      annotation, which overrides DNS hostnames on a given source
                      resource. \n The following values are accepted: \n  \"Ignore\":
                      Ignore any hostname annotation overrides.  \"Allow\": Allow
                      all hostname annotation overrides. \n The default behavior of
                      the ExternalDNS is \"Ignore\". \n Note that by setting a HostnameAnnotationPolicy
                      of \"Allow\", may grant privileged DNS permissions to under-privileged
                      cluster users."
                    enum:
                    - Ignore
                    - Allow
                    type: string
                  namespace:
                    description: Namespace instructs ExternalDNS to only acknowledge
                      source resource instances in a specific namespace.
                    type: string
                  openshiftRouteOptions:
                    description: OpenShiftRoute source configuration options for specifying
                      ingress controller names.
                    properties:
                      routerName:
                        description: If source is openshift-route then you can pass
                          the ingress controller name. Based on this name external-dns
                          will select the respective router.
                        type: string
                    required:
                    - routerName
                    type: object
                  service:
                    description: Service describes source configuration options specific
                      to the service source resource.
                    properties:
                      serviceType:
                        default:
                        - LoadBalancer
                        description: "ServiceType determines what types of Service
                          resources are watched by ExternalDNS. The following types
                          are available options: \n  \"NodePort\"  \"ExternalName\"
                          \ \"LoadBalancer\"  \"ClusterIP\" \n One or more Service
                          types can be specified, if desired. \n Note that using the
                          \"ClusterIP\" service type will enable the ExternalDNS \"--publish-internal-services\"
                          flag, which allows ExternalDNS to publish DNS records for
                          ClusterIP services. \n If no service types are provided,
                          ExternalDNS will be configured to create DNS records for
                          LoadBalancer services only by default."
                        items:
                          description: Service Type string describes ingress methods
                            for a service
                          type: string
                        minItems: 1
                        type: array
                    type: object
                  type:
                    description: Type specifies an ExternalDNS source resource to
                      create DNS records for.
                    enum:
                    - OpenShiftRoute
                    - Service
                    - CRD
                    type: string
                required:
                - type
                type: object
              zones:
                description: "Zones describes which DNS Zone IDs ExternalDNS should
                  publish records to. \n Updating this field after creation will cause
                  all DNS records in the previous zone(s) to be left behind. \n An
                  empty list of zones means that the ExternalDNS will publish to all
                  zones (i.e public and private), unless the operator runs on a platform
                  on which the operator can lookup a default set of zones e.g on OpenShift
                  with its cluster DNS config"
                items:
                  type: string
                maxItems: 10
                type: array
            required:
            - provider
            - source
            type: object
          status:
            description: status is the most recently observed status of the ExternalDNS.
            properties:
              conditions:
                description: Conditions is a list of operator-specific conditions
                  and their status.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed.
                format: int64
                type: integer
              zones:
                description: Zones is the configured zones in use by ExternalDNS.
                items:
                  type: string
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
